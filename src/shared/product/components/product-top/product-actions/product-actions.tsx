import React, {useState} from 'react';
import css from './product-actions.module.css'
import ProductActionBtn from "@/shared/product-action-btn/product-action-btn";

interface props {
    count: number
}

const ProductActions = ({count}: props) => {
    const [intermediateValue, setIntermediate] = useState<number>(count ?? 0)

    const onIncrement = () => setIntermediate((prev) => prev + 1)

    const onDecrement = () => {
        if (intermediateValue > 0) {
            setIntermediate((prev) => prev - 1)
        }
    }

    return (
        <div className={`${css.actions} ${intermediateValue > 0 ? css.wide : ''}`}>
            <ProductActionBtn
                onClick={onDecrement}
                classNames={`${css.decrement} ${intermediateValue > 0 ? css.show : ''}`}
                img={<svg width="22" height="2" viewBox="0 0 22 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M21.5 1C21.5 1.23206 21.4078 1.45462 21.2437 1.61872C21.0796 1.78281 20.8571 1.875 20.625 1.875H1.375C1.14294 1.875 0.920376 1.78281 0.756282 1.61872C0.592187 1.45462 0.5 1.23206 0.5 1C0.5 0.767936 0.592187 0.545376 0.756282 0.381282C0.920376 0.217187 1.14294 0.125 1.375 0.125H20.625C20.8571 0.125 21.0796 0.217187 21.2437 0.381282C21.4078 0.545376 21.5 0.767936 21.5 1Z"
                        fill="#232323"/>
                </svg>
                }
            />
            <p className={`${css.count} ${intermediateValue > 0 ? css.show : ''}`}>
                {intermediateValue}
            </p>
            <ProductActionBtn
                onClick={onIncrement}
                classNames={css.increment}
                img={intermediateValue > 0 ?
                    <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M21.5 11C21.5 11.2321 21.4078 11.4546 21.2437 11.6187C21.0796 11.7828 20.8571 11.875 20.625 11.875H11.875V20.625C11.875 20.8571 11.7828 21.0796 11.6187 21.2437C11.4546 21.4078 11.2321 21.5 11 21.5C10.7679 21.5 10.5454 21.4078 10.3813 21.2437C10.2172 21.0796 10.125 20.8571 10.125 20.625V11.875H1.375C1.14294 11.875 0.920376 11.7828 0.756282 11.6187C0.592187 11.4546 0.5 11.2321 0.5 11C0.5 10.7679 0.592187 10.5454 0.756282 10.3813C0.920376 10.2172 1.14294 10.125 1.375 10.125H10.125V1.375C10.125 1.14294 10.2172 0.920376 10.3813 0.756282C10.5454 0.592187 10.7679 0.5 11 0.5C11.2321 0.5 11.4546 0.592187 11.6187 0.756282C11.7828 0.920376 11.875 1.14294 11.875 1.375V10.125H20.625C20.8571 10.125 21.0796 10.2172 21.2437 10.3813C21.4078 10.5454 21.5 10.7679 21.5 11Z"
                            fill="white"/>
                    </svg>
                    : <svg width="28" height="28" viewBox="0 0 26 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M25.532 5.89883C25.444 5.79352 25.334 5.70882 25.2096 5.6507C25.0853 5.59259 24.9497 5.56248 24.8125 5.5625H5.90781L5.33477 2.41484C5.25628 1.98281 5.02865 1.59204 4.69157 1.31064C4.35449 1.02923 3.92934 0.875063 3.49023 0.875H1.375C1.12636 0.875 0.887903 0.973772 0.712087 1.14959C0.536272 1.3254 0.4375 1.56386 0.4375 1.8125C0.4375 2.06114 0.536272 2.2996 0.712087 2.47541C0.887903 2.65123 1.12636 2.75 1.375 2.75H3.48438L6.47969 19.1902C6.56792 19.6778 6.78339 20.1334 7.1043 20.5109C6.66138 20.9246 6.3417 21.4529 6.18069 22.0372C6.01969 22.6215 6.02365 23.2389 6.19214 23.8211C6.36064 24.4033 6.68708 24.9274 7.13526 25.3354C7.58345 25.7434 8.13588 26.0192 8.73128 26.1324C9.32668 26.2456 9.9418 26.1917 10.5084 25.9766C11.075 25.7615 11.571 25.3937 11.9414 24.914C12.3117 24.4342 12.542 23.8613 12.6066 23.2587C12.6712 22.6561 12.5677 22.0474 12.3074 21.5H17.6301C17.4203 21.9391 17.3118 22.4196 17.3125 22.9062C17.3125 23.5552 17.5049 24.1896 17.8655 24.7292C18.226 25.2688 18.7385 25.6894 19.3381 25.9377C19.9376 26.1861 20.5974 26.2511 21.2339 26.1245C21.8704 25.9978 22.4551 25.6853 22.9139 25.2264C23.3728 24.7676 23.6853 24.1829 23.812 23.5464C23.9386 22.9099 23.8736 22.2501 23.6252 21.6506C23.3769 21.051 22.9563 20.5385 22.4167 20.178C21.8771 19.8174 21.2427 19.625 20.5938 19.625H9.24648C9.02693 19.625 8.81436 19.5479 8.64582 19.4072C8.47728 19.2665 8.36346 19.0711 8.32422 18.8551L7.95273 16.8125H21.5465C22.2051 16.8124 22.8429 16.5811 23.3485 16.159C23.8541 15.7369 24.1955 15.1508 24.3133 14.5027L25.7383 6.66758C25.7624 6.53216 25.7564 6.39308 25.7208 6.26023C25.6851 6.12737 25.6207 6.00399 25.532 5.89883ZM10.75 22.9062C10.75 23.1844 10.6675 23.4563 10.513 23.6875C10.3585 23.9188 10.1389 24.099 9.8819 24.2055C9.62494 24.3119 9.34219 24.3397 9.0694 24.2855C8.79662 24.2312 8.54605 24.0973 8.34938 23.9006C8.15271 23.704 8.01878 23.4534 7.96452 23.1806C7.91026 22.9078 7.93811 22.6251 8.04454 22.3681C8.15098 22.1111 8.33122 21.8915 8.56248 21.737C8.79374 21.5825 9.06562 21.5 9.34375 21.5C9.71671 21.5 10.0744 21.6482 10.3381 21.9119C10.6018 22.1756 10.75 22.5333 10.75 22.9062ZM22 22.9062C22 23.1844 21.9175 23.4563 21.763 23.6875C21.6085 23.9188 21.3889 24.099 21.1319 24.2055C20.8749 24.3119 20.5922 24.3397 20.3194 24.2855C20.0466 24.2312 19.796 24.0973 19.5994 23.9006C19.4027 23.704 19.2688 23.4534 19.2145 23.1806C19.1603 22.9078 19.1881 22.6251 19.2945 22.3681C19.401 22.1111 19.5812 21.8915 19.8125 21.737C20.0437 21.5825 20.3156 21.5 20.5938 21.5C20.9667 21.5 21.3244 21.6482 21.5881 21.9119C21.8518 22.1756 22 22.5333 22 22.9062ZM22.4688 14.1676C22.4294 14.3842 22.3151 14.58 22.1458 14.7208C21.9765 14.8616 21.7631 14.9383 21.543 14.9375H7.61172L6.24883 7.4375H23.6887L22.4688 14.1676Z"
                            fill="#ffffff"/>
                    </svg>
                }/>

        </div>
    );
};

export default ProductActions;